// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package ioc

import (
	"github.com/google/wire"
	"oj/internal/article"
	"oj/internal/judgement"
	"oj/internal/problem"
	"oj/internal/user"
	"oj/internal/user/middleware/jwt"
)

// Injectors from wire.go:

func InitApp() *App {
	cmdable := InitRedis()
	limiter := InitSlideWindow(cmdable)
	handler := jwt.NewRedisJWTHandler(cmdable)
	v := GinMiddlewares(limiter, handler)
	db := InitDB()
	userHandler := user.InitUserHandler(cmdable, db)
	problemHandler := problem.InitProblemHandler(cmdable, db)
	oAuthWeChatHandler := user.InitOAuthWeChatHandler(cmdable, db)
	localSubmitHandler := judgement.InitLocalJudgement(cmdable, db)
	submissionHandler := judgement.InitRemoteJudgement(cmdable, db)
	oAuthGithubHandler := user.InitOAuthGithubHandler(cmdable, db)
	client := InitKafka()
	logger := InitLog()
	articleHandler := article.InitArticleHandler(db, cmdable, client, logger)
	engine := InitWebServer(v, userHandler, problemHandler, oAuthWeChatHandler, localSubmitHandler, submissionHandler, oAuthGithubHandler, articleHandler)
	articleConsumer := article.InitConsumer(db, cmdable, client, logger)
	v2 := NewConsumers(articleConsumer)
	app := InitOJ(engine, v2)
	return app
}

// wire.go:

var BaseSet = wire.NewSet(InitDB, InitRedis, InitKafka, InitLog)
