// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package ioc

import (
	"github.com/crazyfrankie/onlinejudge/internal/article"
	"github.com/crazyfrankie/onlinejudge/internal/judgement"
	"github.com/crazyfrankie/onlinejudge/internal/middleware"
	"github.com/crazyfrankie/onlinejudge/internal/problem"
	"github.com/crazyfrankie/onlinejudge/internal/sms"
	"github.com/crazyfrankie/onlinejudge/internal/user"
	"github.com/google/wire"
)

// Injectors from wire.go:

func InitApp() *App {
	cmdable := InitRedis()
	limiter := InitSlideWindow(cmdable)
	module := middleware.InitModule(cmdable)
	handler := module.Hdl
	v := GinMiddlewares(limiter, handler)
	db := InitDB()
	smsModule := sms.NewModule(limiter)
	userModule := user.InitModule(cmdable, db, limiter, module, smsModule)
	userHandler := userModule.Hdl
	problemModule := problem.InitModule(cmdable, db)
	problemHandler := problemModule.Hdl
	oAuthWeChatHandler := userModule.WeChatHdl
	judgementModule := judgement.InitModule(cmdable, db, problemModule)
	localSubmitHandler := judgementModule.LocHdl
	submissionHandler := judgementModule.RemHdl
	oAuthGithubHandler := userModule.GithubHdl
	client := InitKafka()
	logger := InitLog()
	articleModule := article.InitModule(db, cmdable, client, logger)
	articleHandler := articleModule.Hdl
	adminHandler := articleModule.AdminHdl
	engine := InitWebServer(v, userHandler, problemHandler, oAuthWeChatHandler, localSubmitHandler, submissionHandler, oAuthGithubHandler, articleHandler, adminHandler)
	consumer := articleModule.Consumer
	v2 := NewConsumers(consumer)
	app := &App{
		Server:    engine,
		Consumers: v2,
	}
	return app
}

// wire.go:

var BaseSet = wire.NewSet(InitDB, InitRedis, InitKafka, InitLog)
