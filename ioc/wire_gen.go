// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package ioc

import (
	"github.com/gin-gonic/gin"
	"github.com/google/wire"
	repository3 "oj/internal/judgement/repository"
	cache3 "oj/internal/judgement/repository/cache"
	"oj/internal/judgement/service/local"
	web3 "oj/internal/judgement/web"
	"oj/internal/middleware"
	repository2 "oj/internal/problem/repository"
	cache2 "oj/internal/problem/repository/cache"
	dao2 "oj/internal/problem/repository/dao"
	service2 "oj/internal/problem/service"
	web2 "oj/internal/problem/web"
	"oj/internal/user/repository"
	"oj/internal/user/repository/cache"
	"oj/internal/user/repository/dao"
	"oj/internal/user/service"
	"oj/internal/user/web"
)

// Injectors from wire.go:

func InitGin() *gin.Engine {
	cmdable := InitRedis()
	limiter := InitSlideWindow(cmdable)
	v := GinMiddlewares(limiter)
	db := InitDB()
	userDao := dao.NewUserDao(db)
	userCache := cache.NewUserCache(cmdable)
	userRepository := repository.NewUserRepository(userDao, userCache)
	userService := service.NewUserService(userRepository)
	codeCache := cache.NewRedisCodeCache(cmdable)
	codeRepository := repository.NewCodeRepository(codeCache)
	smsService := InitSMSService(limiter)
	codeService := service.NewCodeService(codeRepository, smsService)
	jwtHandler := middleware.NewJWTHandler()
	userHandler := web.NewUserHandler(userService, codeService, jwtHandler)
	problemDao := dao2.NewProblemDao(db)
	problemCache := cache2.NewProblemCache(cmdable)
	problemRepository := repository2.NewProblemRepository(problemDao, problemCache)
	problemService := service2.NewProblemService(problemRepository)
	problemHandler := web2.NewProblemHandler(problemService)
	wechatService := InitWechatService()
	oAuthWeChatHandler := web.NewOAuthHandler(wechatService, jwtHandler, userService)
	submitCache := cache3.NewSubmitCache(cmdable)
	submitRepository := repository3.NewSubmitRepository(submitCache)
	submitService := InitJudgeService(submitRepository, problemRepository)
	submissionHandler := web3.NewSubmissionHandler(submitService)
	localSubmitCache := cache3.NewLocalSubmitCache(cmdable)
	localSubmitRepo := repository3.NewLocalSubmitRepo(localSubmitCache)
	locSubmitService := local.NewLocSubmitService(localSubmitRepo, problemRepository)
	localSubmitHandler := web3.NewLocalSubmitHandler(locSubmitService)
	engine := InitWebServer(v, userHandler, problemHandler, oAuthWeChatHandler, submissionHandler, localSubmitHandler)
	return engine
}

// wire.go:

var BaseSet = wire.NewSet(InitDB, InitRedis)
