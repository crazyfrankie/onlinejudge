// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package user

import (
	"github.com/crazyfrankie/onlinejudge/internal/auth"
	"github.com/crazyfrankie/onlinejudge/internal/sm"
	"github.com/crazyfrankie/onlinejudge/internal/user/repository"
	"github.com/crazyfrankie/onlinejudge/internal/user/repository/cache"
	"github.com/crazyfrankie/onlinejudge/internal/user/repository/dao"
	"github.com/crazyfrankie/onlinejudge/internal/user/service"
	"github.com/crazyfrankie/onlinejudge/internal/user/service/oauth/github"
	"github.com/crazyfrankie/onlinejudge/internal/user/service/oauth/wechat"
	"github.com/crazyfrankie/onlinejudge/internal/user/web"
	"github.com/crazyfrankie/onlinejudge/internal/user/web/third"
	"github.com/crazyfrankie/onlinejudge/pkg/ratelimit"
	"github.com/redis/go-redis/v9"
	"gorm.io/gorm"
)

// Injectors from wire.go:

func InitModule(cmd redis.Cmdable, db *gorm.DB, limiter ratelimit.Limiter, mdlModule *auth.Module, smsModule *sm.Module) *Module {
	userDao := dao.NewUserDao(db)
	userCache := cache.NewUserCache(cmd)
	userRepository := repository.NewUserRepository(userDao, userCache)
	userService := service.NewUserService(userRepository)
	codeService := smsModule.Sm
	jwtHandler := mdlModule.Hdl
	userHandler := web.NewUserHandler(userService, codeService, jwtHandler)
	githubService := github.NewService()
	oAuthGithubHandler := third.NewOAuthGithubHandler(githubService, userService, jwtHandler)
	wechatService := wechat.NewService()
	oAuthWeChatHandler := third.NewOAuthWeChatHandler(wechatService, jwtHandler, userService)
	module := &Module{
		Hdl:       userHandler,
		GithubHdl: oAuthGithubHandler,
		WeChatHdl: oAuthWeChatHandler,
	}
	return module
}
